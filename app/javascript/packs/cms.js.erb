// This file is automatically compiled by Webpack, along with any other files
// present in this directory. You're encouraged to place your actual application logic in
// a relevant structure within app/javascript and only use these pack files to reference
// that code so it'll be compiled.

require("@rails/ujs").start()
require("turbolinks").start()
require("@rails/activestorage").start()
require("channels")
require("jquery")
require("chart.js")
require("bootstrap")
require("jquery.easing")
require("flatpickr")
require("flatpickr/dist/flatpickr.css")

// custom
require("../scss/sb-admin-2/sb-admin-2.scss")
require("../scss/fields.sass")
require("../scss/fontawesome.scss")
require("../scss/floating-labels.sass")

const images = require.context('../images', true)
const imagePath = (name) => images(name, true)

import flatpickr from "flatpickr"

import { togglePasswordField } from './password.js';
import autocapitalize from './autocapitalize.js';

document.addEventListener("turbolinks:load", () => {
  flatpickr("[data-behavior='flatpickr']:not(.flatpickr-input)", {
    altInput: true,
    altFormat: 'F j, Y',
    dateFormat: 'Y-m-d'
  });

  flatpickr("[data-behavior='flatpickr-with-time']:not(.flatpickr-input)", {
    altInput: true,
    enableTime: true,
    dateFormat: 'Y-m-d H:i',
  });

  togglePasswordField();
  autocapitalize();

  $('.file-input').on('change', function() {
    const element = this;
    const formGroup = $(this).parent('.form-group');
    const imageTypes = <%= Rails.application.config.image_types %>;
    const videoTypes = <%= Rails.application.config.video_types %>;
    const audioTypes = <%= Rails.application.config.audio_types %>;
    const miscellaneousTypes = <%= Rails.application.config.miscellaneous_types %>;
    if (element.files && element.files[0]) {
      if (!imageTypes.concat(videoTypes).concat(audioTypes).concat(miscellaneousTypes).includes(element.files[0].type)) {
        alert('Invalid media type');
        $(formGroup).find('.input-preview').addClass('d-none');
        element.value = '';
        return;
      }

      const reader = new FileReader();

      reader.onload = function(e) {
        $(formGroup).find('.input-preview').addClass('d-none');

        switch(true) {
          case videoTypes.includes(element.files[0].type):
            $(formGroup).find('.video-input-preview').removeClass('d-none');
            $(formGroup).find('.video-input-preview').find('source').attr('src', e.target.result);
            $(formGroup).find('.video-input-preview').load();
            break;
          case imageTypes.includes(element.files[0].type):
            $(formGroup).find('.image-input-preview').removeClass('d-none');
            $(formGroup).find('.image-input-preview').attr('src', e.target.result);
            break;
          case audioTypes.includes(element.files[0].type):
            $(formGroup).find('.audio-input-preview').removeClass('d-none');
            $(formGroup).find('.audio-input-preview').find('source').attr('src', e.target.result);
            break;
          case miscellaneousTypes.includes(element.files[0].type):
            $(formGroup).find('.miscellaneous-input-preview').removeClass('d-none');
            $(formGroup).find('.miscellaneous-input-preview').text(`Uploaded ${element.files[0].name}`);
            break;
        }
      }

      reader.readAsDataURL(element.files[0]);
    }
  });

  $('.image-delete').on('click', function() {
    $("input[name='" + $(this).data('field-name') + "']").val('')
    $(".image-input-preview[data-field-name='" + $(this).data('field-name') + "']").prop('src', '')
  });

  // prevent enter key press on to submit form
  $('form.silence').on('keypress', e => {
    if (e.keyCode == 13) {
      return false;
    }
  });
});
